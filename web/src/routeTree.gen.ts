/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './core/routes/__root'
import { Route as IdRouteImport } from './core/routes/_id/route'
import { Route as AuthRouteImport } from './core/routes/_auth/route'
import { Route as IndexImport } from './core/routes/index'
import { Route as IdLoginImport } from './core/routes/_id/login'
import { Route as AuthSubsListImport } from './core/routes/_auth/subs-list'
import { Route as AuthProfileImport } from './core/routes/_auth/profile'
import { Route as AuthLogoutImport } from './core/routes/_auth/logout'
import { Route as AuthLibraryImport } from './core/routes/_auth/library'
import { Route as IdResetPasswordRouteImport } from './core/routes/_id/reset-password/route'
import { Route as IdRegisterRouteImport } from './core/routes/_id/register/route'
import { Route as IdResetPasswordVerifyImport } from './core/routes/_id/reset-password/verify'
import { Route as IdResetPasswordInitImport } from './core/routes/_id/reset-password/init'
import { Route as IdRegisterVerifyImport } from './core/routes/_id/register/verify'
import { Route as IdRegisterInitImport } from './core/routes/_id/register/init'

// Create/Update Routes

const IdRouteRoute = IdRouteImport.update({
  id: '/_id',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const IdLoginRoute = IdLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => IdRouteRoute,
} as any)

const AuthSubsListRoute = AuthSubsListImport.update({
  id: '/subs-list',
  path: '/subs-list',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLibraryRoute = AuthLibraryImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => AuthRouteRoute,
} as any)

const IdResetPasswordRouteRoute = IdResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => IdRouteRoute,
} as any)

const IdRegisterRouteRoute = IdRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => IdRouteRoute,
} as any)

const IdResetPasswordVerifyRoute = IdResetPasswordVerifyImport.update({
  id: '/verify',
  path: '/verify',
  getParentRoute: () => IdResetPasswordRouteRoute,
} as any)

const IdResetPasswordInitRoute = IdResetPasswordInitImport.update({
  id: '/init',
  path: '/init',
  getParentRoute: () => IdResetPasswordRouteRoute,
} as any)

const IdRegisterVerifyRoute = IdRegisterVerifyImport.update({
  id: '/verify',
  path: '/verify',
  getParentRoute: () => IdRegisterRouteRoute,
} as any)

const IdRegisterInitRoute = IdRegisterInitImport.update({
  id: '/init',
  path: '/init',
  getParentRoute: () => IdRegisterRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_id': {
      id: '/_id'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof IdRouteImport
      parentRoute: typeof rootRoute
    }
    '/_id/register': {
      id: '/_id/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof IdRegisterRouteImport
      parentRoute: typeof IdRouteImport
    }
    '/_id/reset-password': {
      id: '/_id/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof IdResetPasswordRouteImport
      parentRoute: typeof IdRouteImport
    }
    '/_auth/library': {
      id: '/_auth/library'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof AuthLibraryImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/subs-list': {
      id: '/_auth/subs-list'
      path: '/subs-list'
      fullPath: '/subs-list'
      preLoaderRoute: typeof AuthSubsListImport
      parentRoute: typeof AuthRouteImport
    }
    '/_id/login': {
      id: '/_id/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof IdLoginImport
      parentRoute: typeof IdRouteImport
    }
    '/_id/register/init': {
      id: '/_id/register/init'
      path: '/init'
      fullPath: '/register/init'
      preLoaderRoute: typeof IdRegisterInitImport
      parentRoute: typeof IdRegisterRouteImport
    }
    '/_id/register/verify': {
      id: '/_id/register/verify'
      path: '/verify'
      fullPath: '/register/verify'
      preLoaderRoute: typeof IdRegisterVerifyImport
      parentRoute: typeof IdRegisterRouteImport
    }
    '/_id/reset-password/init': {
      id: '/_id/reset-password/init'
      path: '/init'
      fullPath: '/reset-password/init'
      preLoaderRoute: typeof IdResetPasswordInitImport
      parentRoute: typeof IdResetPasswordRouteImport
    }
    '/_id/reset-password/verify': {
      id: '/_id/reset-password/verify'
      path: '/verify'
      fullPath: '/reset-password/verify'
      preLoaderRoute: typeof IdResetPasswordVerifyImport
      parentRoute: typeof IdResetPasswordRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthLibraryRoute: typeof AuthLibraryRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthProfileRoute: typeof AuthProfileRoute
  AuthSubsListRoute: typeof AuthSubsListRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLibraryRoute: AuthLibraryRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthProfileRoute: AuthProfileRoute,
  AuthSubsListRoute: AuthSubsListRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface IdRegisterRouteRouteChildren {
  IdRegisterInitRoute: typeof IdRegisterInitRoute
  IdRegisterVerifyRoute: typeof IdRegisterVerifyRoute
}

const IdRegisterRouteRouteChildren: IdRegisterRouteRouteChildren = {
  IdRegisterInitRoute: IdRegisterInitRoute,
  IdRegisterVerifyRoute: IdRegisterVerifyRoute,
}

const IdRegisterRouteRouteWithChildren = IdRegisterRouteRoute._addFileChildren(
  IdRegisterRouteRouteChildren,
)

interface IdResetPasswordRouteRouteChildren {
  IdResetPasswordInitRoute: typeof IdResetPasswordInitRoute
  IdResetPasswordVerifyRoute: typeof IdResetPasswordVerifyRoute
}

const IdResetPasswordRouteRouteChildren: IdResetPasswordRouteRouteChildren = {
  IdResetPasswordInitRoute: IdResetPasswordInitRoute,
  IdResetPasswordVerifyRoute: IdResetPasswordVerifyRoute,
}

const IdResetPasswordRouteRouteWithChildren =
  IdResetPasswordRouteRoute._addFileChildren(IdResetPasswordRouteRouteChildren)

interface IdRouteRouteChildren {
  IdRegisterRouteRoute: typeof IdRegisterRouteRouteWithChildren
  IdResetPasswordRouteRoute: typeof IdResetPasswordRouteRouteWithChildren
  IdLoginRoute: typeof IdLoginRoute
}

const IdRouteRouteChildren: IdRouteRouteChildren = {
  IdRegisterRouteRoute: IdRegisterRouteRouteWithChildren,
  IdResetPasswordRouteRoute: IdResetPasswordRouteRouteWithChildren,
  IdLoginRoute: IdLoginRoute,
}

const IdRouteRouteWithChildren =
  IdRouteRoute._addFileChildren(IdRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof IdRouteRouteWithChildren
  '/register': typeof IdRegisterRouteRouteWithChildren
  '/reset-password': typeof IdResetPasswordRouteRouteWithChildren
  '/library': typeof AuthLibraryRoute
  '/logout': typeof AuthLogoutRoute
  '/profile': typeof AuthProfileRoute
  '/subs-list': typeof AuthSubsListRoute
  '/login': typeof IdLoginRoute
  '/register/init': typeof IdRegisterInitRoute
  '/register/verify': typeof IdRegisterVerifyRoute
  '/reset-password/init': typeof IdResetPasswordInitRoute
  '/reset-password/verify': typeof IdResetPasswordVerifyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof IdRouteRouteWithChildren
  '/register': typeof IdRegisterRouteRouteWithChildren
  '/reset-password': typeof IdResetPasswordRouteRouteWithChildren
  '/library': typeof AuthLibraryRoute
  '/logout': typeof AuthLogoutRoute
  '/profile': typeof AuthProfileRoute
  '/subs-list': typeof AuthSubsListRoute
  '/login': typeof IdLoginRoute
  '/register/init': typeof IdRegisterInitRoute
  '/register/verify': typeof IdRegisterVerifyRoute
  '/reset-password/init': typeof IdResetPasswordInitRoute
  '/reset-password/verify': typeof IdResetPasswordVerifyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_id': typeof IdRouteRouteWithChildren
  '/_id/register': typeof IdRegisterRouteRouteWithChildren
  '/_id/reset-password': typeof IdResetPasswordRouteRouteWithChildren
  '/_auth/library': typeof AuthLibraryRoute
  '/_auth/logout': typeof AuthLogoutRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/_auth/subs-list': typeof AuthSubsListRoute
  '/_id/login': typeof IdLoginRoute
  '/_id/register/init': typeof IdRegisterInitRoute
  '/_id/register/verify': typeof IdRegisterVerifyRoute
  '/_id/reset-password/init': typeof IdResetPasswordInitRoute
  '/_id/reset-password/verify': typeof IdResetPasswordVerifyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/register'
    | '/reset-password'
    | '/library'
    | '/logout'
    | '/profile'
    | '/subs-list'
    | '/login'
    | '/register/init'
    | '/register/verify'
    | '/reset-password/init'
    | '/reset-password/verify'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/register'
    | '/reset-password'
    | '/library'
    | '/logout'
    | '/profile'
    | '/subs-list'
    | '/login'
    | '/register/init'
    | '/register/verify'
    | '/reset-password/init'
    | '/reset-password/verify'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_id'
    | '/_id/register'
    | '/_id/reset-password'
    | '/_auth/library'
    | '/_auth/logout'
    | '/_auth/profile'
    | '/_auth/subs-list'
    | '/_id/login'
    | '/_id/register/init'
    | '/_id/register/verify'
    | '/_id/reset-password/init'
    | '/_id/reset-password/verify'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  IdRouteRoute: typeof IdRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  IdRouteRoute: IdRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/library",
        "/_auth/logout",
        "/_auth/profile",
        "/_auth/subs-list"
      ]
    },
    "/_id": {
      "filePath": "_id/route.tsx",
      "children": [
        "/_id/register",
        "/_id/reset-password",
        "/_id/login"
      ]
    },
    "/_id/register": {
      "filePath": "_id/register/route.tsx",
      "parent": "/_id",
      "children": [
        "/_id/register/init",
        "/_id/register/verify"
      ]
    },
    "/_id/reset-password": {
      "filePath": "_id/reset-password/route.tsx",
      "parent": "/_id",
      "children": [
        "/_id/reset-password/init",
        "/_id/reset-password/verify"
      ]
    },
    "/_auth/library": {
      "filePath": "_auth/library.tsx",
      "parent": "/_auth"
    },
    "/_auth/logout": {
      "filePath": "_auth/logout.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile": {
      "filePath": "_auth/profile.tsx",
      "parent": "/_auth"
    },
    "/_auth/subs-list": {
      "filePath": "_auth/subs-list.tsx",
      "parent": "/_auth"
    },
    "/_id/login": {
      "filePath": "_id/login.tsx",
      "parent": "/_id"
    },
    "/_id/register/init": {
      "filePath": "_id/register/init.tsx",
      "parent": "/_id/register"
    },
    "/_id/register/verify": {
      "filePath": "_id/register/verify.tsx",
      "parent": "/_id/register"
    },
    "/_id/reset-password/init": {
      "filePath": "_id/reset-password/init.tsx",
      "parent": "/_id/reset-password"
    },
    "/_id/reset-password/verify": {
      "filePath": "_id/reset-password/verify.tsx",
      "parent": "/_id/reset-password"
    }
  }
}
ROUTE_MANIFEST_END */
