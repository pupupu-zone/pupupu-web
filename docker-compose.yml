services:
  # Landing
  asse.landing:
    build:
      context: ./asse-landing
      dockerfile: Dockerfile
    container_name: asse.landing
    ports:
      - "127.0.0.1:6500:80"
    networks:
      - asse_net
    restart: always

  # Front-End App
  asse.app-fe:
    build:
      context: ./asse-frontend
      dockerfile: Dockerfile
    container_name: asse.app-fe
    ports:
      - "127.0.0.1:6600:80"
    networks:
      - asse_net
    restart: always

  # Back-End API
  asse.api:
    build:
      context: ./asse-backend
      dockerfile: Dockerfile
    container_name: asse.api
    env_file:
      - .env  # Use an .env file for sensitive data
    depends_on:
      - asse.postgres
      - asse.redis
    networks:
      - asse_net
    ports:
      - "127.0.0.1:6700:1337"
    restart: always

  # Redis
  asse.redis:
    image: redis:7
    container_name: asse.redis
    networks:
      - asse_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "127.0.0.1:6800:6379"
    restart: always

  # PostgreSQL
  asse.postgres:
    image: postgres:17
    container_name: asse.postgres
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - asse_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "127.0.0.1:6900:5432"
    restart: always

networks:
  asse_net:
  
volumes:
  pgdata: